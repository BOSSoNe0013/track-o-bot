#!/usr/bin/env python

# This script generates the template markers to identify scenes in the app
import os
import re
import glob
from os.path import basename
from psd_tools import PSDImage

qrc_file = open('markers.qrc', 'w')
qrc_file.write("<!DOCTYPE RCC><RCC version=\"1.0\"><qresource>\n")

header_file = open('src/GeneratedMarkers.h', 'w')
header_file.write("// This file is autogenerated by a script!\n")

for path in glob.glob('scenes/*.psd'):
    print path
    psd = PSDImage.load(path)

    background = [layer for layer in psd.layers if layer.name.startswith('Background') and layer.visible][0]
    markers = [layer for layer in psd.layers if layer != background and layer.visible]

    background_image = background.as_PIL()

    for marker in markers:
        name = os.path.splitext(basename(path))[0] + '_' + marker.name
        name = re.sub(r'\W', '_', name)

        def_name = name.upper()
        out_name = name.lower() + '.png'

        out_path = 'markers/' + out_name
        background_image.crop(marker.bbox).save(out_path)

        header_file.write("#define %s_PATH \":/%s\"\n" % (def_name, out_path))
        header_file.write("#define %s_WIDTH %d\n" % (def_name, marker.bbox.width))
        header_file.write("#define %s_HEIGHT %d\n" % (def_name, marker.bbox.height))
        header_file.write("#define %s_X %d\n" % (def_name, marker.bbox.x1))
        header_file.write("#define %s_Y %d\n" % (def_name, marker.bbox.y1))
        header_file.write("\n")

        qrc_file.write("<file>%s</file>\n" % out_path)

header_file.close()

qrc_file.write('</qresource></RCC>')
qrc_file.close()
